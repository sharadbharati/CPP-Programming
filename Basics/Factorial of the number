// large value factorial

#include <bits/stdc++.h>
#include <boost/multiprecision/cpp_int.hpp>
using namespace boost::multiprecision;
using namespace std;
int main() 
{
         int t;
         cin >> t;
         while (t--)
         {
                  int n;
                  cin >> n;
                  cpp_int r=1;
                  for (int i=2 ; i <= n; i++)
                  {
                           r=r*i;
                  }
                  cout << r << '\n';
         }
         return 0;
}





/*
#include <bits/stdc++.h> 
using namespace std;
int main() 
{
         int t;
         cin >> t;
         while (t--)
         {
                  int n,r=1;
                  cin >> n;
                  for (int i=2 ; i <= n; i++)
                  {
                           r=r*i;
                  }
                  cout << r << '\n';
         }
         
         return 0;
}
*/
// Recursive Approach
#include <bits/stdc++.h> 
using namespace std;
int fact(int n)
{
         if (n == 0)
                  return 1;
         return n * fact(n-1);
}

int main() 
{
         int t;
         cin >> t;
         while (t--)
         {
                  int n,r=1;
                  cin >> n;
                  cout << fact(n) << '\n';
         }
         
         return 0;
}
